;------------------------------------------------------------------------------
; template selection
;------------------------------------------------------------------------------

[template]

;selection: text
selection: python_package

;------------------------------------------------------------------------------
; Null command tabular results page configuration
;------------------------------------------------------------------------------

[appearance]

heat_hours: 168
show_coverage_setup: True
show_configuration_file: True
show_url_encoder: True
show_unlinked_files: True

;------------------------------------------------------------------------------
; Paths to command line dependencies
;------------------------------------------------------------------------------

[content_paths]

sample_directory: sample_input
test_directory: test

;------------------------------------------------------------------------------
; text template for illustrative purposes
;------------------------------------------------------------------------------

[text]

filter: *.py *.txt *.ini
ignore_files:
ignore_dirs:
banned:

file_header_1: dir
file_content_1: dir /q {filepath}
file_dependency_1:

file_header_2: more
file_content_2: more {filepath}
file_dependency_2:

;------------------------------------------------------------------------------
; python_package is for treating the host directory as a python package
;------------------------------------------------------------------------------

[python_package]

filter: *.py
ignore_files: *.pyc *.html *.css .coverage
ignore_dirs: dirsite_files .git
banned: __init__.py

dir_header_1: Run all unit tests
dir_content_1: python3 -m unittest

;do not use until extended ascii is decodable...
;-----------------------------------------------
;dir_header_2: Directory tree
;dir_content_2: tree /F

file_header_1:
file_content_1: cat {dirname}/{filebase}.py
file_dependency_1: {dirname}/{filebase}.py

file_header_2: pydoc
file_content_2: python3 -m pydoc {dirname}.{filebase}
file_dependency_2:

file_header_3: pylint
file_content_3: pylint {dirname}/{filebase}.py
file_dependency_3: {dirname}/{filebase}.py

file_header_4: sample
file_content_4: cat {sample_path} && python3 -m {dirname}.{filebase} < {sample_path}
file_dependency_4: {sample_path}

file_header_5: --demo
file_content_5: python3 -m {dirname}.{filebase} --demo
file_dependency_5: {dirname}/{filebase}.py

;use if 'coverage' is installed and symlink exists from test to module(s)
;------------------------------------------------------------------------
file_header_6: coverage
file_content_6: python3 -m coverage run {testpath} -v && python3 -m coverage report -m
file_dependency_6: {testpath}

;------------------------------------------------------------------------------
